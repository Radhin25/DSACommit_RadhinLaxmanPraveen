258. Add Digits
Given an integer num, repeatedly add all its digits until the result has only one digit, and return it.


So, in this particular question, we are going to break the given number and add the individual digits.
We are going to stop the process when the sum comes to a unit digit. till then, we are going to break 

Input: num = 38
→ 3 + 8 = 11
→ 1 + 1 = 2
Output: 2


🔁 Step-by-Step Explanation:
Why while(num >= 10)?

Because if num is already a single digit (less than 10), we return it directly.

If not, we continue to sum its digits.

Inside the loop:

We initialise sum = 0 before the inner loop starts.
This is important because we need a fresh sum for each round.
Then we break the number into digits using:


sum += num % 10; // Get the last digit and add to sum
num /= 10;       // Remove the last digit

After summing all digits:
The current num is completely broken down, and sum holds the total of the digits.

We now assign:
num = sum;
Because we need to check again whether this new number (the sum) is also more than one digit.

If it is, we repeat the process.


class Solution {
public:
    int addDigits(int num) {
        while(num>=10){
            int sum=0;
            while(num!=0){
                int rem=num%10;
                sum=sum+rem;
                num=num/10;
            }
            num=sum;
        }
        return num;
    }
};
